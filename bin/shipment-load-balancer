#!/bin/bash
set -e

if [ "$1" == "_description" ]; then
  echo "Manage load balancer"
  exit
fi

CMD=$1
shift
case $CMD in
  start)
    ID=$(sudo docker ps | grep shipment-load-balancer | awk '{ print $1 }')
    if [ -n "$ID" ]; then
      log "Load balancer already started"
      exit
    fi
    sudo docker run -d -p 80:80 -v /var/log/shipment:/var/log/supervisor -v /etc/shipment/:/usr/local/lib/node_modules/hipache/config/ --name shipment-load-balancer hipache
    log "Load balancer started"
    exit
    ;;
  stop)
    ID=$(sudo docker ps | grep shipment-load-balancer | awk '{ print $1 }')
    if [ -n "$ID" ]; then
      log "Stopping load balancer"
      shipment stop -i $ID
    else
      log "Load balancer not running"
    fi
    exit
    ;;
  redis)
    cmd="exec redis-cli -h \"\$REDIS_PORT_6379_TCP_ADDR\" -p \"\$REDIS_PORT_6379_TCP_PORT\" $@"
    sudo docker run -it --link shipment-load-balancer:redis --rm hipache sh -c "$cmd"
    exit
    ;;
  restart)
    log "Backing up redis"
    hosts=$(redis "keys frontend*")
    host_index=0
    for host in ${hosts[@]}; do
      bindings[$host_index]=$(redis lrange $host 1 -1)
      host_index=$host_index+1
    done
    shipment load-balancer stop
    shipment load-balancer start
    sleep 5
    log "Restoring redis"
    host_index=0
    for host in ${hosts[@]}; do
      redis "rpush $host app"
      for bind in ${bindings[$host_index][@]}; do
        redis "rpush $host $bind"
      done
      host_index=$host_index+1
    done
    exit
    ;;

esac

