#!/bin/bash
set -e

if [ "$1" == "_description" ]; then
  echo "Deploy app"
  exit
fi

usage_deploy() {
  echo "shipment deploy [options] [app name]"
}

if [ "$#" == 0 ]; then
  usage_deploy
  exit
fi


main() {
  local scale=1;
  local nocheck=0;

  while getopts ":cs:" OPTION "$@"; do
    case $OPTION in
      s) scale=$OPTARG;;
      c) nocheck=1;;
    esac
  done
  local name=${@: -1}

  log "Getting running containers"
  local running=$(shipment running -i -a -n $name)

  log "Fetching latest..."
  shipment fetch $name
  log "Building..."
  shipment build $name
  log "Running new container..."
  local new_ids=()
  for i in $(seq 1 $scale); do
    local id=$(shipment run $name)
    new_ids+=($id)
  done

  if [[ "$nocheck" == 0 ]]; then
    #read config
    local conf_file="$APPSPATH/$name/.shipment"
    if [[ -e "$conf_file" ]]; then
      source $conf_file
    fi
    local port=${SHIPMENT_PORT:-5000}

    for i in ${new_ids[@]}; do
      shipment check -i $i -p $port
    done
  fi

  sudo shipment load-balancer update

  log "Stopping running docker containers..."
  for i in ${running[@]}; do
    sudo docker stop $i
  done

  sudo shipment load-balancer update

  log "Removing running docker containers..."
  for i in ${running[@]}; do
    sudo docker rm $i
  done
}

main "$@"
